<html><head><title>Controller</title><link href="styles/default.css" type="text/css" rel="stylesheet"/></head><body><div class="header"> </div><br class="clear"/><div class="navigation"><ul><li><a href="index.htm">Documentation</a></li></ul><ul><li><a class="" href="4294967296-PureMVC.Core.htm">PureMVC.Core</a><ul><li><a class="current" href="4294967588.htm">Controller</a><ul><li><a class="" href="4294967588-Constructors.htm">Constructors</a></li><li><a class="" href="4294967588-Fields.htm">Fields</a></li><li><a class="" href="4294967588-Methods.htm">Methods</a></li></ul></li></ul></li></ul></div><div class="content"><h1>Controller Class</h1><div class="summary">A Multiton <span class="code">IController</span> implementation. </div><div class="inheritance"><h2>Inheritance Hierarchy</h2><ul><li><span>System.Object</span><ul><li><span class="current">PureMVC.Core.Controller</span></li></ul></li></ul></div><div class="details"><span class="namespace"><em>Namespace:</em> <a href="4294967296-PureMVC.Core.htm">PureMVC.Core</a></span><span class="assembly"><em>Assembly:</em> PureMVC in (PureMVC.dll)
								</span></div>
        <div class="syntax">
            <h2>Syntax</h2>
            <pre><span class="keyword">public</span> <span class="keyword">class</span> Controller : IController</pre>
        </div>
    <p>
				The Controller type exposes the following members.
			</p><h2>Constructors</h2><table><thead><tr><th class="icon"/><th>Class</th><th>Summary</th></tr></thead><tbody><tr><td><img src="styles/images/vsobject_constructor.png" alt="public constructor"/></td><td><a href="4294967589.htm">Controller(String)</a></td><td><div class="summary">Constructs and initializes a new controller </div></td></tr></tbody></table><h2>Methods</h2><table><thead><tr><th class="icon"/><th>Name</th><th>Summary</th></tr></thead><tbody><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967595.htm">ExecuteCommand(INotification)</a></td><td><div class="summary">If an <span class="code">ICommand</span> has previously been registered  to handle a the given <span class="code">INotification</span>, then it is executed. </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967592.htm">GetInstance(String, Func&lt;IController&gt;)</a></td><td><div class="summary"><span class="code">Controller</span> Multiton Factory method. </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967602.htm">HasCommand(String)</a></td><td><div class="summary">Check if a Command is registered for a given Notification  </div></td></tr><tr><td><img src="styles/images/vsobject_method_protected.png" alt="protected method"/></td><td><a href="4294967591.htm">InitializeController()</a></td><td><div class="summary">Initialize the Multiton <span class="code">Controller</span> instance </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967597.htm">RegisterCommand(String, Func&lt;ICommand&gt;)</a></td><td><div class="summary">Register a particular <span class="code">ICommand</span> class as the handler  for a particular <span class="code">INotification</span>. </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967600.htm">RemoveCommand(String)</a></td><td><div class="summary">Remove a previously registered <span class="code">ICommand</span> to <span class="code">INotification</span> mapping. </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967604.htm">RemoveController(String)</a></td><td><div class="summary">Remove an IController instance </div></td></tr></tbody></table><h2>Fields</h2><table><thead><tr><th class="icon"/><th>Name</th><th>Description</th></tr></thead><tbody><tr><td><img src="styles/images/vsobject_field_protected.png" alt="protected field"/></td><td><a href="4294967611.htm">commandMap</a></td><td><div class="summary">Mapping of Notification names to Command Class references</div></td></tr><tr><td><img src="styles/images/vsobject_field_protected.png" alt="protected field"/></td><td><a href="4294967612.htm">instanceMap</a></td><td><div class="summary">The Multiton Controller instanceMap.</div></td></tr><tr><td><img src="styles/images/vsobject_constant_protected.png" alt="protected constant"/></td><td><a href="4294967613.htm">MULTITON_MSG</a></td><td><div class="summary">Message Constants</div></td></tr><tr><td><img src="styles/images/vsobject_field_protected.png" alt="protected field"/></td><td><a href="4294967610.htm">multitonKey</a></td><td><div class="summary">The Multiton Key for this Core</div></td></tr><tr><td><img src="styles/images/vsobject_field_protected.png" alt="protected field"/></td><td><a href="4294967609.htm">view</a></td><td><div class="summary">Local reference to View</div></td></tr></tbody></table><div class="remarks"><h2>Remarks</h2><p>In PureMVC, the <span class="code">Controller</span> class follows the  'Command and Controller' strategy, and assumes these  responsibilities:</p><ul><li>Remembering which <span class="code">ICommand</span>s  are intended to handle which <span class="code">INotifications</span>.</li><li>Registering itself as an <span class="code">IObserver</span> with  the <span class="code">View</span> for each <span class="code">INotification</span>  that it has an <span class="code">ICommand</span> mapping for.</li><li>Creating a new instance of the proper <span class="code">ICommand</span>  to handle a given <span class="code">INotification</span> when notified by the <span class="code">View</span>.</li><li>Calling the <span class="code">ICommand</span>'s <span class="code">execute</span>  method, passing in the <span class="code">INotification</span>.</li></ul><p> Your application must register <span class="code">ICommands</span> with the  <span class="code">Controller</span>. </p><p> The simplest way is to subclass <span class="code">Facade</span>,  and use its <span class="code">initializeController</span> method to add your  registrations. </p></div><div class="seealso"><h2>See also</h2><div><a href="4294967637.htm">View</a></div><div><a href="4294967378.htm">Observer</a></div><div><a href="4294967347.htm">Notification</a></div><div><a href="4294967477.htm">SimpleCommand</a></div><div><a href="4294967469.htm">MacroCommand</a></div></div></div><div class="footer">
			Produced by the <a href="http://theboxsoftware.com/products/live-documenter/">Live Documenter</a> developed by <a href="http://theboxsoftware.com">The Box Software</a>.
		</div></body></html>