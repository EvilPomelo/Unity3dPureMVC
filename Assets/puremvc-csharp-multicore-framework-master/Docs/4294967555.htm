<html><head><title>IObserver</title><link href="styles/default.css" type="text/css" rel="stylesheet"/></head><body><div class="header"> </div><br class="clear"/><div class="navigation"><ul><li><a href="index.htm">Documentation</a></li></ul><ul><li><a class="" href="4294967296-PureMVC.Interfaces.htm">PureMVC.Interfaces</a><ul><li><a class="current" href="4294967555.htm">IObserver</a><ul><li><a class="" href="4294967555-Methods.htm">Methods</a></li><li><a class="" href="4294967555-Properties.htm">Properties</a></li></ul></li></ul></li></ul></div><div class="content"><h1>IObserver Interface</h1><div class="summary">The interface definition for a PureMVC Observer. </div><div class="details"><span class="namespace"><em>Namespace:</em> <a href="4294967296-PureMVC.Interfaces.htm">PureMVC.Interfaces</a></span><span class="assembly"><em>Assembly:</em> PureMVC in (PureMVC.dll)
								</span></div>
        <div class="syntax">
            <h2>Syntax</h2>
            <pre><span class="keyword">public</span> <span class="keyword">interface</span> IObserver </pre>
        </div>
    <p>
				The IObserver type exposes the following members.
			</p><h2>Methods</h2><table><thead><tr><th class="icon"/><th>Name</th><th>Summary</th></tr></thead><tbody><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967562.htm">CompareNotifyContext(Object)</a></td><td><div class="summary">Compare the given object to the notificaiton context object. </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967560.htm">NotifyObserver(INotification)</a></td><td><div class="summary">Notify the interested object. </div></td></tr></tbody></table><h2>Properties</h2><table><thead><tr><th class="icon"/><th>Name</th><th>Summary</th></tr></thead><tbody><tr><td><img src="styles/images/vsobject_properties.png" alt="public properties"/></td><td><a href="4294975666.htm">NotifyContext</a></td><td><div class="summary">Set the notification context (this) of the interested object </div></td></tr><tr><td><img src="styles/images/vsobject_properties.png" alt="public properties"/></td><td><a href="4294975660.htm">NotifyMethod</a></td><td><div class="summary">Set the notification method (callback) method of the interested object </div></td></tr></tbody></table><div class="remarks"><h2>Remarks</h2><p>In PureMVC, the <span class="code">Observer</span> class assumes these responsibilities: <ul><li>Encapsulate the notification (callback) method of the interested object.</li><li>Encapsulate the notification context (this) of the interested object.</li><li>Provide methods for setting the notification method and context.</li><li>Provide a method for notifying the interested object.</li></ul></p><p>PureMVC does not rely upon underlying event models such  as the one provided with Flash, and ActionScript 3 does  not have an inherent event model. </p><p>The Observer Pattern as implemented within PureMVC exists  to support event-driven communication between the  application and the actors of the MVC triad. </p><p>An Observer is an object that encapsulates information about an interested object with a notification method that should be called when an <span class="code">INotification</span> is broadcast. The Observer then acts as a proxy for notifying the interested object. </p><p>Observers can receive <span class="code">Notification</span>s by having their <span class="code">notifyObserver</span> method invoked, passing in an object implementing the <span class="code">INotification</span> interface, such as a subclass of <span class="code">Notification</span>. </p></div><div class="seealso"><h2>See also</h2><div><a href="4294967571.htm">IView</a></div><div><a href="4294967539.htm">INotification</a></div></div></div><div class="footer">
			Produced by the <a href="http://theboxsoftware.com/products/live-documenter/">Live Documenter</a> developed by <a href="http://theboxsoftware.com">The Box Software</a>.
		</div></body></html>