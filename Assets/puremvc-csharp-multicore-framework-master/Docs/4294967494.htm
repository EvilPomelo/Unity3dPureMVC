<html><head><title>IFacade</title><link href="styles/default.css" type="text/css" rel="stylesheet"/></head><body><div class="header"> </div><br class="clear"/><div class="navigation"><ul><li><a href="index.htm">Documentation</a></li></ul><ul><li><a class="" href="4294967296-PureMVC.Interfaces.htm">PureMVC.Interfaces</a><ul><li><a class="current" href="4294967494.htm">IFacade</a><ul><li><a class="" href="4294967494-Methods.htm">Methods</a></li></ul></li></ul></li></ul></div><div class="content"><h1>IFacade Interface</h1><div class="summary">The interface definition for a PureMVC Facade. </div><div class="details"><span class="namespace"><em>Namespace:</em> <a href="4294967296-PureMVC.Interfaces.htm">PureMVC.Interfaces</a></span><span class="assembly"><em>Assembly:</em> PureMVC in (PureMVC.dll)
								</span></div>
        <div class="syntax">
            <h2>Syntax</h2>
            <pre><span class="keyword">public</span> <span class="keyword">interface</span> IFacade : INotifier</pre>
        </div>
    <p>
				The IFacade type exposes the following members.
			</p><h2>Methods</h2><table><thead><tr><th class="icon"/><th>Name</th><th>Summary</th></tr></thead><tbody><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967508.htm">HasCommand(String)</a></td><td><div class="summary">Check if a Command is registered for a given Notification  </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967516.htm">HasMediator(String)</a></td><td><div class="summary">Check if a Mediator is registered or not </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967501.htm">HasProxy(String)</a></td><td><div class="summary">Check if a Proxy is registered </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967518.htm">NotifyObservers(INotification)</a></td><td><div class="summary">Notify <span class="code">Observer</span>s. </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967503.htm">RegisterCommand(String, Func&lt;ICommand&gt;)</a></td><td><div class="summary">Register an <span class="code">ICommand</span> with the <span class="code">Controller</span>. </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967510.htm">RegisterMediator(IMediator)</a></td><td><div class="summary">Register an <span class="code">IMediator</span> instance with the <span class="code">View</span>. </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967495.htm">RegisterProxy(IProxy)</a></td><td><div class="summary">Register an <span class="code">IProxy</span> with the <span class="code">Model</span> by name. </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967506.htm">RemoveCommand(String)</a></td><td><div class="summary">Remove a previously registered <span class="code">ICommand</span> to <span class="code">INotification</span> mapping from the Controller. </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967514.htm">RemoveMediator(String)</a></td><td><div class="summary">Remove a <span class="code">IMediator</span> instance from the <span class="code">View</span>. </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967499.htm">RemoveProxy(String)</a></td><td><div class="summary">Remove an <span class="code">IProxy</span> instance from the <span class="code">Model</span> by name. </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967512.htm">RetrieveMediator(String)</a></td><td><div class="summary">Retrieve an <span class="code">IMediator</span> instance from the <span class="code">View</span>. </div></td></tr><tr><td><img src="styles/images/vsobject_method.png" alt="public method"/></td><td><a href="4294967497.htm">RetrieveProxy(String)</a></td><td><div class="summary">Retrieve a <span class="code">IProxy</span> from the <span class="code">Model</span> by name. </div></td></tr></tbody></table><div class="remarks"><h2>Remarks</h2><p>The Facade Pattern suggests providing a single class to act as a central point of communication  for a subsystem. </p><p>In PureMVC, the Facade acts as an interface between the core MVC actors (Model, View, Controller) and the rest of your application. </p></div><div class="seealso"><h2>See also</h2><div><a href="4294967530.htm">IModel</a></div><div><a href="4294967571.htm">IView</a></div><div><a href="4294967484.htm">IController</a></div><div><a href="4294967481.htm">ICommand</a></div><div><a href="4294967539.htm">INotification</a></div></div></div><div class="footer">
			Produced by the <a href="http://theboxsoftware.com/products/live-documenter/">Live Documenter</a> developed by <a href="http://theboxsoftware.com">The Box Software</a>.
		</div></body></html>